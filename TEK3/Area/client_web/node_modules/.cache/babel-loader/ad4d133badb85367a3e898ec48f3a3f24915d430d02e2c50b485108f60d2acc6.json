{"ast":null,"code":"import axios from \"axios\";\nexport default async function CreateReaction(data, Token) {\n  try {\n    const {\n      name,\n      serviceName,\n      description,\n      params\n    } = data;\n    let requestData = {\n      name,\n      serviceName,\n      description,\n      params: params\n    };\n    let requestUrl = 'http://localhost:8080/v1/reactions/';\n    if (Token) {\n      const config = {\n        method: \"post\",\n        maxBodyLength: Infinity,\n        url: requestUrl,\n        headers: {\n          Authorization: `Bearer ${Token}`\n        },\n        data: requestData\n      };\n      try {\n        let response = await axios.request(config);\n        console.log(response.data);\n        return {\n          status: response.status,\n          data: response.data\n        };\n      } catch (error) {\n        if (error.response === undefined) {\n          return {\n            status: 500\n          };\n        } else {\n          return {\n            status: error.response.status\n          };\n        }\n      }\n    } else {\n      return {\n        status: 403\n      };\n    }\n  } catch (error) {\n    console.log(error);\n  }\n}\n_c = CreateReaction;\nvar _c;\n$RefreshReg$(_c, \"CreateReaction\");","map":{"version":3,"names":["axios","CreateReaction","data","Token","name","serviceName","description","params","requestData","requestUrl","config","method","maxBodyLength","Infinity","url","headers","Authorization","response","request","console","log","status","error","undefined","_c","$RefreshReg$"],"sources":["/home/maxencecrespel/Tek3/AREA/B-DEV-500-LIL-5-1-area-maxence.crespel/client_web/src/components/CreateReaction.js"],"sourcesContent":["import axios from \"axios\";\n\nexport default async function CreateReaction(data, Token) {\n    try {\n        const { name, serviceName, description, params } = data;\n        let requestData = {\n            name,\n            serviceName,\n            description,\n            params: params,\n          };\n        let requestUrl = 'http://localhost:8080/v1/reactions/';\n        if (Token) {\n            const config = {\n                method: \"post\",\n                maxBodyLength: Infinity,\n                url: requestUrl,\n                headers: {\n                    Authorization: `Bearer ${Token}`,\n                },\n                data: requestData,\n            };\n            try {\n                let response = await axios.request(config);\n                console.log(response.data)\n                return {\n                    status: response.status,\n                    data: response.data,\n                };\n\n            }\n            catch (error) {\n                if (error.response === undefined) {\n                    return {\n                        status: 500,\n                    };\n                } else {\n                    return {\n                        status: error.response.status,\n                    };\n                }\n            }\n        } else {\n\n            return {\n                status: 403,\n            };\n        }\n    } catch (error) {\n        console.log(error);\n    }\n}\n"],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AAEzB,eAAe,eAAeC,cAAcA,CAACC,IAAI,EAAEC,KAAK,EAAE;EACtD,IAAI;IACA,MAAM;MAAEC,IAAI;MAAEC,WAAW;MAAEC,WAAW;MAAEC;IAAO,CAAC,GAAGL,IAAI;IACvD,IAAIM,WAAW,GAAG;MACdJ,IAAI;MACJC,WAAW;MACXC,WAAW;MACXC,MAAM,EAAEA;IACV,CAAC;IACH,IAAIE,UAAU,GAAG,qCAAqC;IACtD,IAAIN,KAAK,EAAE;MACP,MAAMO,MAAM,GAAG;QACXC,MAAM,EAAE,MAAM;QACdC,aAAa,EAAEC,QAAQ;QACvBC,GAAG,EAAEL,UAAU;QACfM,OAAO,EAAE;UACLC,aAAa,EAAG,UAASb,KAAM;QACnC,CAAC;QACDD,IAAI,EAAEM;MACV,CAAC;MACD,IAAI;QACA,IAAIS,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,OAAO,CAACR,MAAM,CAAC;QAC1CS,OAAO,CAACC,GAAG,CAACH,QAAQ,CAACf,IAAI,CAAC;QAC1B,OAAO;UACHmB,MAAM,EAAEJ,QAAQ,CAACI,MAAM;UACvBnB,IAAI,EAAEe,QAAQ,CAACf;QACnB,CAAC;MAEL,CAAC,CACD,OAAOoB,KAAK,EAAE;QACV,IAAIA,KAAK,CAACL,QAAQ,KAAKM,SAAS,EAAE;UAC9B,OAAO;YACHF,MAAM,EAAE;UACZ,CAAC;QACL,CAAC,MAAM;UACH,OAAO;YACHA,MAAM,EAAEC,KAAK,CAACL,QAAQ,CAACI;UAC3B,CAAC;QACL;MACJ;IACJ,CAAC,MAAM;MAEH,OAAO;QACHA,MAAM,EAAE;MACZ,CAAC;IACL;EACJ,CAAC,CAAC,OAAOC,KAAK,EAAE;IACZH,OAAO,CAACC,GAAG,CAACE,KAAK,CAAC;EACtB;AACJ;AAACE,EAAA,GAjD6BvB,cAAc;AAAA,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}